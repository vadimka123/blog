- provide(:title, 'Регистрация')

.container.content
  .row
    .pin-article.span4{:style => 'float: none; margin: 0 auto;'}
      %article.article
        %center
          %h3.title
            Регистрация
          %br
        .container-fluid
          .row-fluid
            .span12
              = form_for(resource, as: resource_name, url: registration_path(resource_name), html: {class: 'form', name: 'registration', 'ng-controller' => 'validateUser', :novalidate => true}) do |f|
                .text-field-half
                  %p
                    = f.text_field :name, autofocus: true, placeholder: 'Ваше имя', 'ng-model' => 'name', :required => true
                  %span{'ng-show' => "registration['user[name]'].$dirty && registration['user[name]'].$invalid", :style => 'color:red'}
                    %span{'ng-show' => "registration['user[name]'].$error.required"} Имя не может быть пустым
                %br
                .text-field-half
                  %p
                    = f.email_field :email, placeholder: 'Ваша электронная почта', :type => 'email', 'ng-model' => 'email', :required => true, 'unique-email' => true
                  %span{'ng-show' => "registration['user[email]'].$dirty && registration['user[email]'].$invalid", :style => 'color:red'}
                    %span{'ng-show' => "registration['user[email]'].$error.required"} Электронная почта не может быть пустой
                    %span{'ng-show' => "registration['user[email]'].$error.email"} Неверный адрес электронной почты
                    %span{'ng-show' => "registration['user[email]'].$error.unique"} Данный адрес электронной почты уже зарегистрирован
                %br
                .text-field-half
                  %p
                    = f.password_field :password, autocomplete: 'off', class: 'form-control', placeholder: 'Пароль для входа', type: 'password', 'ng-model' => 'password', 'ng-minlength' => '6', 'ng-maxlength' => '16', :required => true
                  %span{'ng-show' => "registration['user[password]'].$dirty && registration['user[password]'].$invalid", :style => 'color:red'}
                    %span{'ng-show' => "registration['user[password]'].$error.required"} Пароль не может быть пустым
                    %span{'ng-show' => "registration['user[password]'].$error.minlength"} Пароль должен быть больше 6 символов
                    %span{'ng-show' => "registration['user[password]'].$error.maxlength"} Пароль должен быть меньше 16 символов
                %br
                .text-field-half
                  %p
                    = f.password_field :password_confirmation, class: 'form-control', placeholder: 'Подтверждение пароля', type: 'password', 'ng-model' => 'password_confirmation', :required => true, :match => "registration['user[password]']"
                  %span{'ng-show' => "registration['user[password_confirmation]'].$dirty && registration['user[password_confirmation]'].$invalid", :style => 'color:red'}
                    %span{'ng-show' => "registration['user[password]'].$error.required"} Подтверждение пароля не может быть пустым
                    %span{'ng-show' => "registration['user[password_confirmation]'].$error.match"} Пароли не совпадают
                %br
                .text-field-half
                  = f.file_field :avatar, class: 'filestyle', :'data-buttonText' => 'Выберите аватар', :accept => 'image/*'
                %br
                %br
                %no-captcha{'expired-callback' => 'expiredCallback', 'g-recaptcha-response' => 'gRecaptchaResponse', :theme => 'light'}
                %br
                %center
                  %p.submit
                    = f.submit 'Завершить регистрацию', 'ng-disabled' => "registration.$invalid || gRecaptchaResponse == '' || expired"
%br
%br
%br